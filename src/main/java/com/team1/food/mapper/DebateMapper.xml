<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.food.mapper.DebateMapper">
<!-- 
	<select id="selectDebateBoard"
		resultType="com.team1.food.domain.DebateDto">
		SELECT d.id id,
		d.title title,
		d.inserted inserted,
		COUNT(r.id) numOfReply
		FROM Debate d LEFT JOIN BigReply r ON d.id = r.debateId
		GROUP BY d.id
		ORDER BY id DESC
		

	</select>
	 -->
	<insert id="writeDebate" useGeneratedKeys="true" keyColumn="id"
		keyProperty="id">
		INSERT INTO Debate (title,body, memberId)
		VALUES (#{title},
		#{body}, #{memberId})
	</insert>

	<select id="selectDebateById"
		resultType="com.team1.food.domain.DebateDto">
		SELECT b.id,
		b.title,
		b.body,
		b.inserted,
		b.memberId,
		m.nickName writerNickName,
		COUNT(r.id) numOfReply
		FROM Debate b LEFT JOIN BigReply r ON b.id = r.debateId
		JOIN Member m ON b.memberId = m.id
		WHERE b.id = #{id}
	</select>

	<!-- <select id="getBoard" resultType="com.team1.food.domain.DebateDto"> 
		SELECT id, title, body, inserted FROM Debate WHERE id = #{id} </select> -->
	<update id="updateDebate">
		UPDATE Debate
		SET title = #{title},
		body = #{body}
		WHERE
		id = #{id}
	</update>

	<delete id="deleteDebate">
		DELETE FROM Debate
		WHERE id = #{id }
	</delete>

	<select id="countDebate" resultType="int">
		SELECT COUNT(id) FROM Debate d
		WHERE close = 0
		<if test="keyword != '%%'">
			<choose>
				<when test="type == 'all'">
					AND title LIKE #{keyword } OR
					      body LIKE #{keyword }
				</when>
				<when test="type == 'title'">
					AND title LIKE #{keyword }
				</when>
				<when test="type == 'body'">
					AND body LIKE #{keyword }
				</when>
			</choose>
		</if> 
	</select>

	<select id="listDebatePage"
		resultType="com.team1.food.domain.DebateDto">
		SELECT d.id id,
		d.title title,
		d.inserted inserted,
		COUNT(r.id) numOfReply,
		m.nickName writerNickName,
		d.hit hit,
		d.close
		FROM Debate d LEFT JOIN BigReply r ON d.id = r.debateId
						   JOIN Member m ON d.memberId = m.id
		WHERE d.close = 0
		<if test="keyword != '%%'">
			<choose>
				<when test="type == 'all'">
						AND (d.title LIKE #{keyword } OR
					      d.body LIKE #{keyword })
					     
				</when> 
				<when test="type == 'title'">
					 AND d.title LIKE #{keyword }
					
				</when>
				<when test="type == 'body'">
					  AND d.body LIKE #{keyword }
				
				</when>
			</choose>
		</if> 
		GROUP BY d.id
		ORDER BY d.id DESC
		LIMIT #{from},#{row}
	</select>
	
	<select id="selectCloseDebate"
		resultType="com.team1.food.domain.DebateDto">
		SELECT d.id id,
		d.title title,
		d.inserted inserted,
		COUNT(r.id) numOfReply,
		m.nickName writerNickName,
		d.hit hit,
		d.close
		FROM Debate d LEFT JOIN BigReply r ON d.id = r.debateId
		JOIN Member m ON d.memberId = m.id
		WHERE d.close = 1
		<if test="keyword != '%%'">
			<choose>
				<when test="type == 'all'">
					AND (d.title LIKE #{keyword } OR
					      d.body LIKE #{keyword })
				</when>
				<when test="type == 'title'">
					AND d.title LIKE #{keyword }
				</when>
				<when test="type == 'body'">
					AND  d.body LIKE #{keyword }
				</when>
			</choose>
		</if>
		
		GROUP BY d.id
		ORDER BY d.id DESC
		LIMIT #{from},#{row}
	</select>
	
	<select id="countClose" resultType="int">
		SELECT COUNT(id) FROM Debate d
	    WHERE d.close = 1
		<if test="keyword != '%%'">
			<choose>
				<when test="type == 'all'">
					AND (d.title LIKE #{keyword } OR
					      d.body LIKE #{keyword })
				</when>
				<when test="type == 'title'">
					AND d.title LIKE #{keyword }
				</when>
				<when test="type == 'body'">
					AND  d.body LIKE #{keyword }
				</when>
			</choose>
		</if> 
	</select>

<select id="selectCloseById"
		resultType="com.team1.food.domain.DebateDto">
		SELECT b.id,
		b.title,
		b.body,
		b.inserted,
		b.memberId,
		m.nickName writerNickName,
		COUNT(r.id) numOfReply
		FROM Debate b LEFT JOIN BigReply r ON b.id = r.debateId
		JOIN Member m ON b.memberId = m.id
		WHERE b.id = #{id}
	</select>
	
	<update id="updateClose">
		UPDATE Debate 
		SET close = 1
		WHERE id = #{id}
	</update>
	
	<!-- <select id="AllDebate" resultType="com.team1.food.domain.DebateDto">
		SELECT d.id id,
		d.title title,
		d.inserted inserted,
		COUNT(r.id) numOfReply,
		m.nickName writerNickName,
		d.close
		FROM Debate d LEFT JOIN BigReply r ON d.id = r.debateId
			JOIN Member m ON d.memberId = m.id
		<if test="keyword != '%%'">
			<choose>
				<when test="type == 'all'">
					WHERE d.title LIKE #{keyword } OR
					      d.body LIKE #{keyword }
				</when>
				<when test="type == 'title'">
					WHERE d.title LIKE #{keyword }
				</when>
				<when test="type == 'body'">
					WHERE  d.body LIKE #{keyword }			
				</when>
			</choose>
		</if>
		<if test="close != ''">
		AND close = #{close}
		</if>
		GROUP BY d.id
		ORDER BY d.id DESC
		LIMIT #{from},#{row}
	</select> -->
	
	<!-- <select id="countAllDebate" resultType="int">
		SELECT COUNT(id) FROM Debate
		<if test="keyword != '%%'">
			<choose>
				<when test="type == 'all'">
					WHERE title LIKE #{keyword } OR
					      body LIKE #{keyword }
				</when>
				<when test="type == 'title'">
					WHERE title LIKE #{keyword }
				</when>
				<when test="type == 'body'">
					WHERE  body LIKE #{keyword }
				</when>
			</choose>
		</if> 
	</select>
	 -->
	<delete id="deleteClose">
		DELETE FROM Debate
		WHERE id = #{id }
	</delete>
	
	<select id="removeClose"
		resultType="com.team1.food.domain.DebateDto">
		SELECT b.id,
		b.title,
		b.body,
		b.inserted,
		b.memberId,
		m.nickName writerNickName,
		COUNT(r.id) numOfReply
		FROM Debate b LEFT JOIN BigReply r ON b.id = r.debateId
		JOIN Member m ON b.memberId = m.id
		WHERE b.id = #{id}
	</select>
	
	<update id="viewCount">
	UPDATE Debate
	SET hit = hit + 1
	WHERE id = #{id }
	</update>
	
	<update id="closeViewCount">
	UPDATE Debate
	SET hit = hit + 1
	WHERE id = #{id }
	</update>
	
</mapper>




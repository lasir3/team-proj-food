<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.food.mapper.AdminBoardMapper">
	
	<!-- 공지 -->
	
	<select id="selectNoticeBoardAll" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT  n.id, 
			n.title, 
			n.inserted,
			n.pinned,
			m.nickName writerNickName,
			COUNT(r.noticeId) numOfReply
	FROM Notice n JOIN Member m ON n.memberId = m.id
				LEFT JOIN Reply r ON n.id = r.noticeId 
				
	<if test="keyword != '%%'">
		<choose>
			<when test="type == 'all'">
				WHERE n.title LIKE #{keyword } OR
					n.content LIKE #{keyword }	
			</when>
			<when test="type == 'title'">
				WHERE n.title LIKE #{keyword }
			</when>
			<when test="type == 'content'">
				WHERE n.content LIKE #{keyword }
			</when>
		</choose>
	</if>
		
	GROUP BY n.id
	ORDER BY n.id DESC
	LIMIT #{startFrom}, #{rowPerPage}
	</select>
	
	<select id="selectNoticeBoardById" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT 	id,
		 	title, 
		 	content, 
		 	memberId, 
		 	inserted,
		 	pinned
	FROM Notice
	WHERE id = #{id}
	</select>
	
	<insert id="insertNoticeBoard">
	INSERT INTO Notice (title, content, memberId, pinned)
	VALUES (#{title}, #{content}, #{memberId}, ${pinned})
	</insert>
	
	<update id="updateNoticeBoard">
	UPDATE Notice
	SET title = #{title},
		content = #{content},
		pinned = #{pinned}
	WHERE id = #{id}
	</update>
	
	<delete id="deleteNoticeBoardById">
	DELETE FROM Notice
	WHERE id = #{id}
	</delete>
	
	<select id="selectPinnedNoticeList" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT  n.id, 
			n.title, 
			n.inserted,
			n.pinned,
			m.nickName writerNickName,
			COUNT(r.noticeId) numOfReply
	FROM Notice n JOIN Member m ON n.memberId = m.id
				LEFT JOIN Reply r ON n.id = r.noticeId 
	WHERE n.pinned = true
	GROUP BY n.id
	ORDER BY n.id DESC
	</select>
	
	<!-- 쉼터  -->
	
	<select id="selectRestAreaBoardAll" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT  r.id, 
			r.title, 
			r.inserted,
			m.nickName writerNickName,
			COUNT(Reply.restAreaId) numOfReply
	FROM RestArea r JOIN Member m ON r.memberId = m.id
				LEFT JOIN Reply ON r.id = Reply.restAreaId
	
	<if test="keyword != '%%'">
		<choose>
			<when test="type == 'all'">
				WHERE r.title LIKE #{keyword } OR
					r.content LIKE #{keyword }	
			</when>
			<when test="type == 'title'">
				WHERE r.title LIKE #{keyword }
			</when>
			<when test="type == 'content'">
				WHERE r.content LIKE #{keyword }
			</when>
		</choose>
	</if>
	
	GROUP BY r.id
	ORDER BY r.id DESC
	LIMIT #{startFrom}, #{rowPerPage}
	</select>
	
	<select id="selectRestAreaBoardById" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT 	id,
		 	title, 
		 	content, 
		 	memberId, 
		 	inserted
	FROM RestArea
	WHERE id = #{id}
	</select>
	
	<insert id="insertRestAreaBoard">
	INSERT INTO RestArea (title, content, memberId)
	VALUES (#{title}, #{content}, #{memberId})
	</insert>
	
	<update id="updateRestAreaBoard">
	UPDATE RestArea
	SET title = #{title},
		content = #{content}
	WHERE id = #{id}
	</update>
	
	<delete id="deleteRestAreaBoardById">
	DELETE FROM RestArea
	WHERE id = #{id}
	</delete>
	
	
	<!-- 문의  -->
	
	<select id="selectAskBoardAll" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT  a.id, 
			a.title, 
			a.inserted,
			m.nickName writerNickName,
			COUNT(r.askId) numOfReply
	FROM Ask a JOIN Member m ON a.memberId = m.id
			LEFT JOIN Reply r ON a.id = r.askId
			
	<if test="keyword != '%%'">
		<choose>
			<when test="type == 'all'">
				WHERE a.title LIKE #{keyword } OR
					a.content LIKE #{keyword }	
			</when>
			<when test="type == 'title'">
				WHERE a.title LIKE #{keyword }
			</when>
			<when test="type == 'content'">
				WHERE a.content LIKE #{keyword }
			</when>
		</choose>
	</if>
			
	GROUP BY a.id
	ORDER BY a.id DESC
	LIMIT #{startFrom}, #{rowPerPage}
	</select>
	
	<select id="selectAskBoardById" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT 	id,
		 	title, 
		 	content, 
		 	memberId, 
		 	inserted
	FROM Ask
	WHERE id = #{id}
	</select>
	
	<insert id="insertAskBoard">
	INSERT INTO Ask (title, content, memberId)
	VALUES (#{title}, #{content}, #{memberId})
	</insert>
	
	<update id="updateAskBoard">
	UPDATE Ask
	SET title = #{title},
		content = #{content}
	WHERE id = #{id}
	</update>
	
	<delete id="deleteAskBoardById">
	DELETE FROM Ask
	WHERE id = #{id}
	</delete>
	
	<!-- 신고  -->
	
	<select id="selectReportBoardAll" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT  r.id, 
			r.title, 
			r.inserted,
			m.nickName writerNickName,
			COUNT(Reply.reportId) numOfReply
	FROM Report r JOIN Member m ON r.memberId = m.id
			LEFT JOIN Reply ON r.id = Reply.reportId
			
	<if test="keyword != '%%'">
		<choose>
			<when test="type == 'all'">
				WHERE r.title LIKE #{keyword } OR
					r.content LIKE #{keyword }	
			</when>
			<when test="type == 'title'">
				WHERE r.title LIKE #{keyword }
			</when>
			<when test="type == 'content'">
				WHERE r.content LIKE #{keyword }
			</when>
		</choose>
	</if>
	
	GROUP BY r.id
	ORDER BY r.id DESC
	LIMIT #{startFrom}, #{rowPerPage}
	</select>
	
	<select id="selectReportBoardById" resultType="com.team1.food.domain.AdminBoardDto">
	SELECT 	id,
		 	title, 
		 	content, 
		 	memberId, 
		 	inserted
	FROM Report
	WHERE id = #{id}
	</select>
	
	<insert id="insertReportBoard">
	INSERT INTO Report (title, content, memberId)
	VALUES (#{title}, #{content}, #{memberId})
	</insert>
	
	<update id="updateReportBoard">
	UPDATE Report
	SET title = #{title},
		content = #{content}
	WHERE id = #{id}
	</update>
	
	<delete id="deleteReportBoardById">
	DELETE FROM Report
	WHERE id = #{id}
	</delete>
	
	<!-- 공용 -->
	<select id="selectBoardCount" resultType="int">
	SELECT COUNT(id)
	FROM ${tableName}
	<if test="keyword != '%%'">
		<choose>
			<when test="type == 'all'">
				WHERE title LIKE #{keyword } OR
					content LIKE #{keyword }	
			</when>
			<when test="type == 'title'">
				WHERE title LIKE #{keyword }
			</when>
			<when test="type == 'content'">
				WHERE content LIKE #{keyword }
			</when>
		</choose>
	</if>
	</select>
	
</mapper>